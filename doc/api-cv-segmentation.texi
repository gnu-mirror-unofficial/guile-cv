@c -*- mode: texinfo; coding: utf-8 -*-
@c This is part of the GNU Guile-CV Reference Manual.
@c Copyright (C) 2016 - 2017 Free Software Foundation, Inc.
@c See the file guile-cv.texi for copying conditions.


@node Segmentation
@subsection Segmentation

The Guile-CV procedures and methods related to segmentation.

@subheading Procedures

@ifhtml
@indentedblock
@table @code
@item @ref{im-label}
@item @ref{im-label-channel}
@item @ref{im-label-all}
@item @ref{im-label-all-channel}
@c @item @ref{im-watershed}
@c @item @ref{im-watershed-channel}
@end table
@end indentedblock
@end ifhtml


@anchor{im-label}
@anchor{im-label-channel}
@anchor{im-label-all}
@anchor{im-label-all-channel}
@deffn Procedure im-label image [#:con 8] [#:bg 'dark]
@deffnx Procedure im-label-channel channel width height [#:con 8] [#:bg 'dark]
@deffnx Procedure im-label-all image [#:con 8]
@deffnx Procedure im-label-all-channel channel width height [#:con 8]

Returns two values: a new GRAY image or GRAY channel, and the total
number of objects.

The @code{im-label} and @code{im-label-channel} procedures label
foreground objects in the binary @var{image}.  In the new image or
channel, 0.0 indicates a background pixel, 1.0 indicates that the pixel
belongs to object number 1, 2.0 that the pixel belongs to object number
2, etc.

The @code{im-label-all} and @code{im-label-all-channel} procedures label
all objects in the binary @var{image}, with no specific distinction for
any @emph{background value}. As a result, these two procedures will
label not only the continuous background, if any, but also any
hole(s). As an example, they are used by @ref{im-fill}, defined in the
module @code{(cv morphology)}, which you may have a look at for a better
understanding of how it works.

Two pixels belong to the same object if they are neighbors.  By default
the algorithm uses 8-connectivity to define a neighborhood, but this can
be changed through the keyword argument @var{#:con}, which can be either
4 or 8.

@ifnottex
@image{images/pp-17-bf,,,pp-17-bf,png}
@image{images/pp-17-label,,,pp-17-bf-label,png}
@image{images/pp-17-label-all,,,pp-17-bf-label-all,png}

Here above, left being the original image, you can see the difference
between @code{im-label} (1 object) and @code{im-label-all} (6 objects).
Note that we had to run @code{im-threshold} on the original image first
(all labeling procedures take a binary image (or channel) as their
mandatory argument), for the record, we used @code{128} as the threshold
value.
@end ifnottex
@end deffn


@c @anchor{im-watershed}
@c @anchor{im-watershed-channel}
@c @deffn Procedure im-watershed image
@c @deffnx Procedure im-watershed-channel channel width height

@c Returns a new image or channel.
@c @end deffn
