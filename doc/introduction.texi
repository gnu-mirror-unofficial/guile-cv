@c -*- mode: texinfo; coding: utf-8 -*-
@c This is part of the GNU Guile-CV Reference Manual.
@c Copyright (C) 2016 - 2017 Free Software Foundation, Inc.
@c See the file guile-cv.texi for copying conditions.


@node Introduction
@chapter Introduction

@menu
* About Guile-CV::
@c * Description::
@c * What else::
@c * Savannah::
* Obtaining and Installing Guile-CV::
* Contact::
* Reporting Bugs::
@end menu


@node About Guile-CV
@section About Guile-CV

@strong{GNU Guile-CV} @*
Image Processing and Analysis in @uref{@value{UGUILE}, Guile} @*
a Computer Vision functional programming library


@c @subheading Description

@uref{@value{UGUILE-CV}, Guile-CV} - Image Processing and Analysis in
@uref{@value{UGUILE}, Guile} - is a Computer Vision functional
programming library for the @uref{@value{UGUILE}, Guile} Scheme
language.

Based on @uref{@value{UVIGRA}, Vigra} (Vision with Generic Algorithms -
a C++ image processing and analysis library), @uref{@value{UGUILE-CV},
Guile-CV} comprises a direct binding to @uref{@value{UVIGRAC}, Vigra C}
(a C wrapper to most of the Vigra functionality), @code{enriched} with
pure Guile scheme algorithms, all accessible through a @code{nice},
@code{clean} and @code{easy to use} high level @code{API}.


@subheading Objective

@uref{@value{UGUILE-CV}, Guile-CV} objective is to be a @code{robust},
@code{reliable} and @code{fast} - Image Processing and Analysis -
Computer Vision functional programming library for the
@uref{@value{UGUILE}, Guile} Scheme language. @uref{@value{UGUILE-CV},
Guile-CV} also wants to be @code{easy to use}, @code{study},
@code{modify} and @code{extend}.

@uref{@value{UGUILE-CV}, Guile-CV} can be used as an @code{educational
sofware}, a @code{research toolbox} but it can also be used @code{'in
production'}: @uref{@value{UGUILE-CV}, Guile-CV} is @code{robust},
@code{reliable} and @code{fast}, and we will make sure
@uref{@value{UGUILE-CV}, Guile-CV} remains @code{robust},
@code{reliable} and @code{fast} as it grows.

@c @subheading What else

@c @uref{@value{UGUILE-CV}, Guile-CV} is almost entirely written in
@c @uref{@value{UGUILE}, Guile} Scheme, though for performance reasons,
@c some basic operations are implemented in C (see libguile-cv if you are
@c interested).  This C code is kept to the very strict minimum and _not_
@c part of the API: as Guile Scheme evolves, targeting an AOT compiler, we
@c may rewrite these in scheme at any moment.


@subheading Savannah

@uref{@value{UGUILE-CV}, Guile-CV} also has a
@uref{@value{UGUILE-CV-SAVANNAH}, Savannah project page}.


@node Obtaining and Installing Guile-CV
@section Obtaining and Installing Guile-CV

@uref{@value{UGUILE-CV}, Guile-CV} can be obtained from the following
archive @uref{@value{UGUILE-CV-RELEASES}, site}.  The file will be named
guile-cv-version.tar.gz. The current version is @value{VERSION}, so the
file you should grab is:

@indentedblock
@uref{@value{UGUILE-CV-LATEST}}
@end indentedblock

@subheading Dependencies

@uref{@value{UGUILE-CV}, Guile-CV} needs the following software to run:

@itemize @bullet

@item
Autoconf >= 2.69
@item
Automake >= 1.14
@item
Makeinfo >= 6.3
@item
@uref{@value{UGUILE}, Guile} >= 2.0.13
@item
@uref{@value{UGUILE-LIB}, Guile-Lib} >= 0.2.5
@item 
@uref{@value{UVIGRA}, Vigra} >= 1.11.0

@indentedblock
@strong{Special notes:}

If you manually install @uref{@value{UVIGRA}, Vigra}, make sure you pass
the cmake ‑DCMAKE_BUILD_TYPE=RELEASE option, which triggers absolutely
essential adequate runtime optimization flags.
@end indentedblock

@item
@uref{@value{UVIGRAC}, Vigra C}

@indentedblock
Vigra C - a C wrapper [to some of] the Vigra functionality - is
currently only available by cloning its source code @uref{@value{UGIT},
git} repository: there is no release and no versioning scheme
either@footnote{We do our best to check that the libvigra_c installed
library does contain the required Guile-CV functionalty though, and
these checks are listed as part of our @code{configure} steps}.  But no
big deal, its home page has an 'Installation' section which guides you
step by step.

@strong{Notes:}

@enumerate
@item
Make sure you pass the cmake ‑DCMAKE_BUILD_TYPE=RELEASE option, which
triggers absolutely essential adequate runtime optimization flags;

@item
Vigra C says it depends on @code{cmake >= 3.1}, but this is only
true if you want to build its documentation, probably not the case. Most
distribution still have cmake 2.8, if that is your case, you may safely
edit @file{/your/path/vigra_c/CMakeLists.txt} and downgrade this
requirement to the cmake version installed on your machine;

@item
Make sure the directory where @file{libvigra_c.so} has been installed is
'known', either because it is defined in @file{/etc/ld.so.conf.d}, or
you set the environment variable @code{LD_LIBRARY_PATH}, otherwise Guile
won't find it and @code{configure} will report an error.
@end enumerate
@end indentedblock

@item
@uref{@value{ULATEX}, LaTex}

@indentedblock
Any modern latex distribution will do, we use @uref{@value{UTEXLIVE},
TexLive}.

Guile-CV will check that it can find the @code{standalone}
documentclass, as well as the following packages: @code{inputenc},
@code{fontenc}, @code{lmodern}, @code{xcolor}, @code{booktabs},
@code{siunitx}, @code{iwona}.

@uref{@value{UIWONA}, Iwona}: this is the font used to create
@ref{im-histogram} headers, legend indices and footers. Note that it
could be that it is not part of your 'basic' LaTex distro, on debian
for example, iwona is part of the texlive-fonts-extra package.
@end indentedblock

@end itemize


@subheading Quickstart

Assuming you have satisfied the dependencies, open a terminal and
proceed with the following steps:

@example
cd <download-path>
tar zxf guile-cv-@value{VERSION}.tar.gz
cd guile-cv-@value{VERSION}
./configure [--prefix=/your/prefix]
make
make install
@end example

@indentedblock
@strong{Special notes:}

Before you start to use @uref{@value{UGUILE-CV}, Guile-CV}, make sure
you read and implement the recommendation made in the manual, section
@xref{Configuring Guile's repl-print procedure}.
@end indentedblock

Happy @uref{@value{UGUILE-CV}, Guile-CV}!

@*
@strong{Notes:}

@enumerate
@item
In the above @code{configure} step, @code{--prefix=/your/prefix} is
optional.  The default value is @code{/usr/local}.
@ifhtml
@*@*
@end ifhtml

@item
To install Guile-CV, you must have @code{write permissions} to the
following directories:

@indentedblock
@code{$prefix} and its subdirs@*
Guile's global site directory@*
Guile's site ccache directory
@end indentedblock

You may check the above two latest directories location using:

@example
guile -c "(display (%global-site-dir)) (newline)"
guile -c "(display (%site-ccache-dir)) (newline)"
@end example

Guile-CV's modules are installed in Guile's global site directory.
Guile-CV's compiled modules are installed in the Guile's
@code{site-ccache} directory.
@ifhtml
@*@*
@end ifhtml

@item
Like for any other GNU Tool Chain compatible software, you may install
the documentation locally using @code{make install-info}, @code{make
install-html} and/or @code{make install-pdf}. The documentation is
installed in @code{$prefix/share/doc/guile-cv}
@ifhtml
@*@*
@end ifhtml

@item
Last but not least :), Guile-CV comes with a @code{test-suite}, which we
recommend you to run (especially before @ref{Reporting Bugs}):

@example
make check
@end example
@end enumerate


@node Contact
@section Contact


@subheading Mailing lists

Guile-CV uses the following mailing list:

@itemize @bullet

@item
@value{GUILE-USER} is for general user help and discussion.

@item
@value{GUILE-DEVEL} is used to discuss most aspects of Guile-CV,
including development and enhancement requests.

@c @item
@c @value{GUILE-CV-BUGS} is used for Guile-CV bug reports.

@end itemize

When sending emails to guile-user and/or guile-devel, please use
'Guile-CV: ' to prefix the subject line of any Guile-CV related email,
thanks!


@subheading IRC

Most of the time you can find me on irc, channel @code{#guile},
@code{#guix} and @code{#scheme} on @emph{irc.freenode.net},
@code{#clutter} and @code{#introspection} on @emph{irc.gnome.org}, under
the nickname @strong{daviid}.



@node Reporting Bugs
@section Reporting Bugs

Guile-CV uses the following bug reports mailing list:

@itemize @bullet
@item @value{GUILE-CV-BUGS}
@end itemize

You can (un)subscribe to the bugs report list by following instructions
on the @uref{@value{UGUILE-CV-BUGS-LISTINFO}, list information page}.

